-- public.users definition

-- Drop table

-- DROP TABLE users;

CREATE TABLE IF NOT EXISTS users (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" varchar(150) NOT NULL,
	email varchar(150) NOT NULL,
	CONSTRAINT users_pk PRIMARY KEY (id)
);


-- public.requests definition

-- Drop table

-- DROP TABLE requests;

CREATE TABLE IF NOT EXISTS requests (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	description varchar(250) NULL,
	requestor_id int4 NULL,
	created timestamp NULL,
	CONSTRAINT requests_pk PRIMARY KEY (id),
	CONSTRAINT requests_users_fk FOREIGN KEY (requestor_id) REFERENCES users(id)
);


-- public.items definition

-- Drop table

-- DROP TABLE items;

CREATE TABLE IF NOT EXISTS items (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" varchar(150) NOT NULL,
	description varchar(250) NULL,
	is_available bool NULL,
	owner_id int4 NOT NULL,
	request_id int4 NULL,
	CONSTRAINT items_pk PRIMARY KEY (id),
	CONSTRAINT items_requests_fk FOREIGN KEY (request_id) REFERENCES requests(id),
	CONSTRAINT items_users_fk FOREIGN KEY (owner_id) REFERENCES users(id)
);


-- public."comments" definition

-- Drop table

-- DROP TABLE "comments";

CREATE TABLE IF NOT EXISTS "comments" (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"text" varchar(250) NOT NULL,
	item_id int4 NOT NULL,
	author_id int4 NOT NULL,
	created timestamp NOT NULL,
	CONSTRAINT comments_pk PRIMARY KEY (id),
	CONSTRAINT comments_items_fk FOREIGN KEY (item_id) REFERENCES items(id),
	CONSTRAINT comments_users_fk FOREIGN KEY (author_id) REFERENCES users(id)
);